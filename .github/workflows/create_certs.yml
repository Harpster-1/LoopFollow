name: 3. Create Certificates
run-name: Create Certificates (${{ github.ref_name }})
on:
  workflow_dispatch:

jobs:
  validate:
    name: Validate
    uses: ./.github/workflows/validate_secrets.yml
    secrets: inherit

  certificates:
    name: Create Certificates
    needs: validate
    runs-on: macos-15
    outputs:
      new_certificate_needed: ${{ steps.set_output.outputs.new_certificate_needed }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        
      - name: Patch Match Tables
        run: find /usr/local/lib/ruby/gems -name table_printer.rb | xargs sed -i "" "/puts(Terminal::Table.new(params))/d"
      
      - name: Sync clock
        run: sudo sntp -sS time.windows.com

      - name: Run Fastlane certs lane
        run: |
          echo "Running Fastlane certs lane..."
          bundle exec fastlane certs || true  # ignore errors to continue with check
          
      - name: Check Distribution certificate and renew if needed
        run: bundle exec fastlane check_and_renew_certificates
        id: check_certs
      
      - name: Set output based on certificate status
        id: set_output
        run: |
          CERT_STATUS_FILE="${{ github.workspace }}/fastlane/new_certificate_needed.txt"
          ENABLE_NUKE_CERTS=${{ vars.ENABLE_NUKE_CERTS }}
          
          if [ -f "$CERT_STATUS_FILE" ]; then
            CERT_STATUS=$(cat "$CERT_STATUS_FILE" | tr -d '\n' | tr -d '\r')
            echo "new_certificate_needed: $CERT_STATUS"
            echo "new_certificate_needed=$CERT_STATUS" >> $GITHUB_OUTPUT
          else
            echo "Certificate status file not found. Defaulting to false."
            echo "new_certificate_needed=false" >> $GITHUB_OUTPUT
          fi
          
          # Warn if certificate renewal is disabled in the repo variables
          if [ "$CERT_STATUS" != "true" ] && [ "$ENABLE_NUKE_CERTS" != "true" ]; then
            echo "::notice::üîî Automated renewal of certificates is disabled because ENABLE_NUKE_CERTS is not set to 'true'."
          fi
          
          if [ "$CERT_STATUS" = "true" ] && [ "$ENABLE_NUKE_CERTS" != "true" ]; then
            echo "::error::‚ùå No valid distribution certificate found. Automated renewal was skipped because ENABLE_NUKE_CERTS is not 'true'."
            exit 1
          fi
          
          if [ "${{ vars.FORCE_NUKE_CERTS }}" = "true" ]; then
            echo "::warning::‚ÄºÔ∏è Nuking of certificates was forced because FORCE_NUKE_CERTS is set to 'true'."
          fi

  nuke_certs:
    name: Nuke certificates
    needs: [validate, certificates]
    runs-on: macos-14
    if: ${{ (needs.certificates.outputs.new_certificate_needed == 'true' && vars.ENABLE_NUKE_CERTS == 'true') || vars.FORCE_NUKE_CERTS == 'true' }}
    steps:
      - name: Show certificate check output
        run: echo "new_certificate_needed=${{ needs.certificates.outputs.new_certificate_needed }}"
      
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: bundle install
      
      - name: Run Fastlane nuke_certs
        run: |
          set -e
          bundle exec fastlane nuke_certs
      
      - name: Recreate Distribution certificate after nuking
        run: |
          set -e
          bundle exec fastlane certs
      
      - name: Add success annotations
        if: ${{ success() }}
        run: |
          echo "::warning::‚ö†Ô∏è All Distribution certificates and TestFlight profiles have been revoked and recreated."
          echo "::warning::‚ùóÔ∏è If you have other apps that do not auto-renew certificates, please run the '3. Create Certificates' workflow for each."
          echo "::warning::‚úÖ Your existing TestFlight builds will keep working!"